variables:
    certfile:  ${certfile}
    keyfile:   ${keyfile}
    lxdhost:   ${lxdhost:localhost}
    lxdport:   ${lxdport:8443}
    cname:     ${container_name}
    rootpw:    ${rootpw}
    guacamole: ${guacamole}
    startarg:  ${startarg}
        
lxd:
    certFile: ${certfile}
    keyFile: ${keyfile}
    host: ${lxdhost}
    port: ${lxdport}

container:
    source:
        protocol: "simplestreams"
        server : "https://images.linuxcontainers.org"
        architecture: "x86_64"
        alias: "debian/stretch"
        type: "image"
        
    configuration:
        name: ${cname}
        ephemeral: "false"
        profile: 
            - "default"
        storage: "default"

provisioning:
    # wait for network 
    - script: 
        label: "wait for network"
        content: |
            #!/bin/sh
            while  ! systemctl is-active --quiet networking; do 
                echo "wait for network being up..."
                sleep 1
            done
            sleep 1

    # install all packages
    - run:
        label: "install all packages" 
        commands: |
            apt-get update
            apt-get -y install eatmydata             
            eatmydata -- apt-get dist-upgrade 
            eatmydata -- apt-get install -qy openssh-server build-essential git wget unzip libdvbcsa-dev libdvbcsa1 \
                                libssl-dev libxml2-dev \
                                openssh-server nano less syslog-ng iputils-ping
                
    # change default locale and timezone
    - script:
        label: "change locale and timezone"
        content: |
            #!/bin/sh
            sed -i 's/^# *\(de_DE.UTF-8\)/\1/' /etc/locale.gen
            locale-gen
            update-locale LANG=de_DE.UTF-8
            timedatectl set-timezone Europe/Berlin
            echo "export LANG=de_DE@UTF-8" >> /etc/bash.bashrc
            echo "export LC_ALL=de_DE.UTF-8" >> /etc/bash.bashrc
            echo "export LANG=de_DE@UTF-8" > /etc/profile.d/locale_de.sh
            echo "export LC_ALL=de_DE.UTF-8" > /etc/profile.d/locale_de.sh

    # set root password, enable root ssh 
    - script: 
        label: "enable root login"
        content: |
            if [ ! -z "${rootpw}" ]; then
                echo "root:${rootpw}" | chpasswd
                sed -i -e "s/#PermitRootLogin.*/PermitRootLogin yes/" /etc/ssh/sshd_config
            fi;

    # install minisatip
    - script: 
        label: "install minisatip"
        content: |
            #!/bin/sh
            cd /usr/local/src
            git clone https://github.com/catalinii/minisatip.git minisatip
            cd minisatip
            ./configure
            make
            cp minisatip /usr/local/bin
            cp -r html /usr/local/share/minisatip

    # create systemd start script
    - createFile:
        label: "create systemd start script"
        remote: "/etc/systemd/system/minisatip.service"
        uid: "0"
        gid: "0"
        permission: "0644"
        content: |
            [Unit]
            Description=Start minisatip

            [Service]
            Type=simple
            ExecStart=/usr/local/bin/minisatip ${startarg}
            Restart=on-failure
            RestartSec=10
            TimeoutSec=30

            [Install]
            WantedBy=multi-user.target

    # configure guacamole
    - createFile:        
        label: "create file in ${guacamole}"
        container: ${guacamole}        
        remote: "/tmp/addconnection"
        uid: "0"
        gid: "0"
        permission: "0644"
        content: |
            \set AUTOCOMMIT off
            DO $$BEGIN
                IF NOT EXISTS (select 1 from guacamole_connection where connection_name = 'Container ${cname}') THEN        
                    PERFORM nextval('guacamole_connection_connection_id_seq');        
                    INSERT INTO guacamole_connection VALUES (currval('guacamole_connection_connection_id_seq'), '${cname}', NULL, 'ssh', NULL, NULL, NULL, false, NULL, NULL, NULL);
                    INSERT INTO guacamole_connection_parameter VALUES (currval('guacamole_connection_connection_id_seq'), 'hostname', '${cname}');
                    INSERT INTO guacamole_connection_parameter VALUES (currval('guacamole_connection_connection_id_seq'), 'password', '${rootpw}');
                    INSERT INTO guacamole_connection_parameter VALUES (currval('guacamole_connection_connection_id_seq'), 'username', 'root');
    
                    INSERT INTO guacamole_connection_permission VALUES ((SELECT user_id FROM guacamole_user WHERE username = 'guacadmin'), currval('guacamole_connection_connection_id_seq'), 'READ');
                    INSERT INTO guacamole_connection_permission VALUES ((SELECT user_id FROM guacamole_user WHERE username = 'guacadmin'), currval('guacamole_connection_connection_id_seq'), 'UPDATE');
                    INSERT INTO guacamole_connection_permission VALUES ((SELECT user_id FROM guacamole_user WHERE username = 'guacadmin'), currval('guacamole_connection_connection_id_seq'), 'DELETE');
                    INSERT INTO guacamole_connection_permission VALUES ((SELECT user_id FROM guacamole_user WHERE username = 'guacadmin'), currval('guacamole_connection_connection_id_seq'), 'ADMINISTER');
                END IF;
            END$$;
            commit;
    
    - script:
        label: "in ${guacamole}"
        container: ${guacamole}
        content: |
            #!/bin/sh
            if [ -z "${rootpw}" -o -z "${guacamole}" ]; then 
                exit 0; 
            fi
            
            su postgres -c "psql -d guacamole_db -f /tmp/addconnection"
            rm -f /tmp/addconnection

    # change syslog, fixes 'no space left on device tty10'. Really strange.... 
    - script: 
        label: "change syslog"
        content: |
            #!/bin/sh        
            sed -i "s/\`tty10\`/\"\/var\/log\/cons-tty10.log\"/" /etc/syslog-ng/syslog-ng.conf

    # fix LXD stop issues
    - run:
        label: "fix lxd stop issue" 
        commands: |
            systemctl mask systemd-networkd            

    # restart all services
    - run: 
        label: "restart all services"
        commands: |
            systemctl daemon-reload
            systemctl enable minisatip
            systemctl stop sshd
            systemctl start sshd
            systemctl start minisatip
            systemctl enable syslog-ng
            systemctl stop syslog-ng
            systemctl start syslog-ng

    # cleanup
    - run: 
        label: "cleanup"
        commands: |
            apt-get clean
            apt-get -qy autoremove
            rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
